// This file is auto-generated by @hey-api/openapi-ts

/**
 * CollectResponse
 */
export type CollectResponse = {
  /**
   * Message
   */
  message: string;
};

/**
 * ErrorResponse
 */
export type ErrorResponse = {
  /**
   * Detail
   */
  detail: string;
  /**
   * Error Code
   */
  error_code?: string | null;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
  /**
   * Detail
   */
  detail?: Array<ValidationError>;
};

/**
 * LikeResponse
 */
export type LikeResponse = {
  /**
   * Message
   */
  message: string;
};

/**
 * NearbyPostcard
 */
export type NearbyPostcard = {
  /**
   * Postcard Id
   */
  postcard_id: string;
  /**
   * Image Url
   */
  image_url: string;
  /**
   * Text
   */
  text: string;
  current_position: Position;
  next_destination: Position;
  /**
   * Last Updated At
   */
  last_updated_at: string;
};

/**
 * PathPoint
 */
export type PathPoint = {
  /**
   * Prefecture
   */
  prefecture: string;
  /**
   * Lat
   */
  lat: number;
  /**
   * Lon
   */
  lon: number;
  /**
   * Arrival Time
   */
  arrival_time: string;
};

/**
 * Position
 */
export type Position = {
  /**
   * Lat
   */
  lat: number;
  /**
   * Lon
   */
  lon: number;
};

/**
 * PostcardCreateRequest
 */
export type PostcardCreateRequest = {
  /**
   * Image Url
   */
  image_url: string;
  /**
   * Text
   */
  text: string;
};

/**
 * PostcardCreateResponse
 */
export type PostcardCreateResponse = {
  /**
   * Postcard Id
   */
  postcard_id: string;
  /**
   * Created At
   */
  created_at: string;
};

/**
 * PostcardDeleteResponse
 */
export type PostcardDeleteResponse = {
  /**
   * Message
   */
  message: string;
  /**
   * Postcard Id
   */
  postcard_id: string;
};

/**
 * PostcardDetail
 */
export type PostcardDetail = {
  /**
   * Postcard Id
   */
  postcard_id: string;
  /**
   * Image Url
   */
  image_url: string;
  /**
   * Text
   */
  text: string;
  /**
   * Created At
   */
  created_at: string;
  /**
   * Author Id
   */
  author_id: string;
  /**
   * Likes Count
   */
  likes_count: number;
  /**
   * Path
   */
  path: Array<PathPoint>;
};

/**
 * PostcardInCollection
 */
export type PostcardInCollection = {
  /**
   * Postcard Id
   */
  postcard_id: string;
  /**
   * Image Url
   */
  image_url: string;
  /**
   * Text
   */
  text: string;
  /**
   * Created At
   */
  created_at: string;
  /**
   * Author Id
   */
  author_id: string;
  /**
   * Likes Count
   */
  likes_count: number;
};

/**
 * PostcardPathResponse
 */
export type PostcardPathResponse = {
  /**
   * Postcard Id
   */
  postcard_id: string;
  /**
   * Path
   */
  path: Array<PathPoint>;
};

/**
 * PostcardUpdateRequest
 */
export type PostcardUpdateRequest = {
  /**
   * Image Url
   */
  image_url: string;
  /**
   * Text
   */
  text: string;
};

/**
 * PostcardUpdateResponse
 */
export type PostcardUpdateResponse = {
  /**
   * Message
   */
  message: string;
  /**
   * Postcard Id
   */
  postcard_id: string;
};

/**
 * UserCreateRequest
 */
export type UserCreateRequest = {
  /**
   * Username
   */
  username: string;
  /**
   * Profile Image Url
   */
  profile_image_url: string;
};

/**
 * UserCreateResponse
 */
export type UserCreateResponse = {
  /**
   * User Id
   */
  user_id: string;
  /**
   * Message
   */
  message: string;
};

/**
 * UserDeleteResponse
 */
export type UserDeleteResponse = {
  /**
   * Message
   */
  message: string;
};

/**
 * UserProfile
 */
export type UserProfile = {
  /**
   * User Id
   */
  user_id: string;
  /**
   * Username
   */
  username: string;
  /**
   * Email
   */
  email: string;
  /**
   * Profile Image Url
   */
  profile_image_url: string;
};

/**
 * UserPublicProfile
 */
export type UserPublicProfile = {
  /**
   * User Id
   */
  user_id: string;
  /**
   * Username
   */
  username: string;
  /**
   * Profile Image Url
   */
  profile_image_url: string;
};

/**
 * UserUpdateRequest
 */
export type UserUpdateRequest = {
  /**
   * Username
   */
  username: string;
  /**
   * Profile Image Url
   */
  profile_image_url: string;
};

/**
 * UserUpdateResponse
 */
export type UserUpdateResponse = {
  /**
   * Message
   */
  message: string;
  /**
   * User Id
   */
  user_id: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
  /**
   * Location
   */
  loc: Array<string | number>;
  /**
   * Message
   */
  msg: string;
  /**
   * Error Type
   */
  type: string;
};

export type CreateUserProfileApiUsersPostData = {
  body: UserCreateRequest;
  path?: never;
  query?: never;
  url: "/api/users";
};

export type CreateUserProfileApiUsersPostErrors = {
  /**
   * リクエストボディが不正な場合
   */
  400: ErrorResponse;
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * すでにプロフィールが存在する場合
   */
  409: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreateUserProfileApiUsersPostError =
  CreateUserProfileApiUsersPostErrors[keyof CreateUserProfileApiUsersPostErrors];

export type CreateUserProfileApiUsersPostResponses = {
  /**
   * Successful Response
   */
  201: UserCreateResponse;
};

export type CreateUserProfileApiUsersPostResponse =
  CreateUserProfileApiUsersPostResponses[keyof CreateUserProfileApiUsersPostResponses];

export type DeleteMyProfileApiUsersMeDeleteData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/me";
};

export type DeleteMyProfileApiUsersMeDeleteErrors = {
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
};

export type DeleteMyProfileApiUsersMeDeleteError =
  DeleteMyProfileApiUsersMeDeleteErrors[keyof DeleteMyProfileApiUsersMeDeleteErrors];

export type DeleteMyProfileApiUsersMeDeleteResponses = {
  /**
   * Successful Response
   */
  200: UserDeleteResponse;
};

export type DeleteMyProfileApiUsersMeDeleteResponse =
  DeleteMyProfileApiUsersMeDeleteResponses[keyof DeleteMyProfileApiUsersMeDeleteResponses];

export type GetMyProfileApiUsersMeGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/me";
};

export type GetMyProfileApiUsersMeGetErrors = {
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * ユーザープロフィールが見つからない場合
   */
  404: ErrorResponse;
};

export type GetMyProfileApiUsersMeGetError =
  GetMyProfileApiUsersMeGetErrors[keyof GetMyProfileApiUsersMeGetErrors];

export type GetMyProfileApiUsersMeGetResponses = {
  /**
   * Successful Response
   */
  200: UserProfile;
};

export type GetMyProfileApiUsersMeGetResponse =
  GetMyProfileApiUsersMeGetResponses[keyof GetMyProfileApiUsersMeGetResponses];

export type UpdateMyProfileApiUsersMePutData = {
  body: UserUpdateRequest;
  path?: never;
  query?: never;
  url: "/api/users/me";
};

export type UpdateMyProfileApiUsersMePutErrors = {
  /**
   * リクエストボディが不正な場合
   */
  400: ErrorResponse;
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdateMyProfileApiUsersMePutError =
  UpdateMyProfileApiUsersMePutErrors[keyof UpdateMyProfileApiUsersMePutErrors];

export type UpdateMyProfileApiUsersMePutResponses = {
  /**
   * Successful Response
   */
  200: UserUpdateResponse;
};

export type UpdateMyProfileApiUsersMePutResponse =
  UpdateMyProfileApiUsersMePutResponses[keyof UpdateMyProfileApiUsersMePutResponses];

export type GetUserProfileApiUsersUserIdGetData = {
  body?: never;
  path: {
    /**
     * User Id
     */
    user_id: string;
  };
  query?: never;
  url: "/api/users/{user_id}";
};

export type GetUserProfileApiUsersUserIdGetErrors = {
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * 指定したユーザーIDが見つからない場合
   */
  404: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetUserProfileApiUsersUserIdGetError =
  GetUserProfileApiUsersUserIdGetErrors[keyof GetUserProfileApiUsersUserIdGetErrors];

export type GetUserProfileApiUsersUserIdGetResponses = {
  /**
   * Successful Response
   */
  200: UserPublicProfile;
};

export type GetUserProfileApiUsersUserIdGetResponse =
  GetUserProfileApiUsersUserIdGetResponses[keyof GetUserProfileApiUsersUserIdGetResponses];

export type CreatePostcardApiPostcardsPostData = {
  body: PostcardCreateRequest;
  path?: never;
  query?: never;
  url: "/api/postcards";
};

export type CreatePostcardApiPostcardsPostErrors = {
  /**
   * リクエストボディが不正な場合
   */
  400: ErrorResponse;
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CreatePostcardApiPostcardsPostError =
  CreatePostcardApiPostcardsPostErrors[keyof CreatePostcardApiPostcardsPostErrors];

export type CreatePostcardApiPostcardsPostResponses = {
  /**
   * Successful Response
   */
  201: PostcardCreateResponse;
};

export type CreatePostcardApiPostcardsPostResponse =
  CreatePostcardApiPostcardsPostResponses[keyof CreatePostcardApiPostcardsPostResponses];

export type DeletePostcardApiPostcardsPostcardIdDeleteData = {
  body?: never;
  path: {
    /**
     * Postcard Id
     */
    postcard_id: string;
  };
  query?: never;
  url: "/api/postcards/{postcard_id}";
};

export type DeletePostcardApiPostcardsPostcardIdDeleteErrors = {
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * 他のユーザーの絵葉書を削除しようとした場合
   */
  403: ErrorResponse;
  /**
   * 指定した絵葉書IDが見つからない場合
   */
  404: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type DeletePostcardApiPostcardsPostcardIdDeleteError =
  DeletePostcardApiPostcardsPostcardIdDeleteErrors[keyof DeletePostcardApiPostcardsPostcardIdDeleteErrors];

export type DeletePostcardApiPostcardsPostcardIdDeleteResponses = {
  /**
   * Successful Response
   */
  200: PostcardDeleteResponse;
};

export type DeletePostcardApiPostcardsPostcardIdDeleteResponse =
  DeletePostcardApiPostcardsPostcardIdDeleteResponses[keyof DeletePostcardApiPostcardsPostcardIdDeleteResponses];

export type GetPostcardDetailApiPostcardsPostcardIdGetData = {
  body?: never;
  path: {
    /**
     * Postcard Id
     */
    postcard_id: string;
  };
  query?: never;
  url: "/api/postcards/{postcard_id}";
};

export type GetPostcardDetailApiPostcardsPostcardIdGetErrors = {
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * 指定した絵葉書IDが見つからない場合
   */
  404: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetPostcardDetailApiPostcardsPostcardIdGetError =
  GetPostcardDetailApiPostcardsPostcardIdGetErrors[keyof GetPostcardDetailApiPostcardsPostcardIdGetErrors];

export type GetPostcardDetailApiPostcardsPostcardIdGetResponses = {
  /**
   * Successful Response
   */
  200: PostcardDetail;
};

export type GetPostcardDetailApiPostcardsPostcardIdGetResponse =
  GetPostcardDetailApiPostcardsPostcardIdGetResponses[keyof GetPostcardDetailApiPostcardsPostcardIdGetResponses];

export type UpdatePostcardApiPostcardsPostcardIdPutData = {
  body: PostcardUpdateRequest;
  path: {
    /**
     * Postcard Id
     */
    postcard_id: string;
  };
  query?: never;
  url: "/api/postcards/{postcard_id}";
};

export type UpdatePostcardApiPostcardsPostcardIdPutErrors = {
  /**
   * リクエストボディが不正な場合
   */
  400: ErrorResponse;
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * 他のユーザーの絵葉書を更新しようとした場合
   */
  403: ErrorResponse;
  /**
   * 指定した絵葉書IDが見つからない場合
   */
  404: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type UpdatePostcardApiPostcardsPostcardIdPutError =
  UpdatePostcardApiPostcardsPostcardIdPutErrors[keyof UpdatePostcardApiPostcardsPostcardIdPutErrors];

export type UpdatePostcardApiPostcardsPostcardIdPutResponses = {
  /**
   * Successful Response
   */
  200: PostcardUpdateResponse;
};

export type UpdatePostcardApiPostcardsPostcardIdPutResponse =
  UpdatePostcardApiPostcardsPostcardIdPutResponses[keyof UpdatePostcardApiPostcardsPostcardIdPutResponses];

export type GetPostcardPathApiPostcardsPostcardIdPathGetData = {
  body?: never;
  path: {
    /**
     * Postcard Id
     */
    postcard_id: string;
  };
  query?: never;
  url: "/api/postcards/{postcard_id}/path";
};

export type GetPostcardPathApiPostcardsPostcardIdPathGetErrors = {
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * 指定した絵葉書IDが見つからない場合
   */
  404: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetPostcardPathApiPostcardsPostcardIdPathGetError =
  GetPostcardPathApiPostcardsPostcardIdPathGetErrors[keyof GetPostcardPathApiPostcardsPostcardIdPathGetErrors];

export type GetPostcardPathApiPostcardsPostcardIdPathGetResponses = {
  /**
   * Successful Response
   */
  200: PostcardPathResponse;
};

export type GetPostcardPathApiPostcardsPostcardIdPathGetResponse =
  GetPostcardPathApiPostcardsPostcardIdPathGetResponses[keyof GetPostcardPathApiPostcardsPostcardIdPathGetResponses];

export type GetNearbyPostcardsApiPostcardsNearbyGetData = {
  body?: never;
  path?: never;
  query: {
    /**
     *  Lat
     * クライアントの現在地の緯度
     */
    _lat: number;
    /**
     *  Lon
     * クライアントの現在地の経度
     */
    _lon: number;
    /**
     *  Radius
     * 検索範囲（半径、メートル単位）
     */
    _radius?: number | null;
  };
  url: "/api/postcards/nearby";
};

export type GetNearbyPostcardsApiPostcardsNearbyGetErrors = {
  /**
   * lat または lon が欠けている、または不正な場合
   */
  400: ErrorResponse;
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type GetNearbyPostcardsApiPostcardsNearbyGetError =
  GetNearbyPostcardsApiPostcardsNearbyGetErrors[keyof GetNearbyPostcardsApiPostcardsNearbyGetErrors];

export type GetNearbyPostcardsApiPostcardsNearbyGetResponses = {
  /**
   * Response Get Nearby Postcards Api Postcards Nearby Get
   * Successful Response
   */
  200: Array<NearbyPostcard>;
};

export type GetNearbyPostcardsApiPostcardsNearbyGetResponse =
  GetNearbyPostcardsApiPostcardsNearbyGetResponses[keyof GetNearbyPostcardsApiPostcardsNearbyGetResponses];

export type CollectPostcardApiPostcardsPostcardIdCollectPostData = {
  body?: never;
  path?: never;
  query: {
    /**
     *  Postcard Id
     */
    _postcard_id: string;
  };
  url: "/api/postcards/{postcard_id}/collect";
};

export type CollectPostcardApiPostcardsPostcardIdCollectPostErrors = {
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * 指定した絵葉書IDが見つからない、またはすでに拾われている場合
   */
  404: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type CollectPostcardApiPostcardsPostcardIdCollectPostError =
  CollectPostcardApiPostcardsPostcardIdCollectPostErrors[keyof CollectPostcardApiPostcardsPostcardIdCollectPostErrors];

export type CollectPostcardApiPostcardsPostcardIdCollectPostResponses = {
  /**
   * Successful Response
   */
  200: CollectResponse;
};

export type CollectPostcardApiPostcardsPostcardIdCollectPostResponse =
  CollectPostcardApiPostcardsPostcardIdCollectPostResponses[keyof CollectPostcardApiPostcardsPostcardIdCollectPostResponses];

export type LikePostcardApiPostcardsPostcardIdLikePostData = {
  body?: never;
  path?: never;
  query: {
    /**
     *  Postcard Id
     */
    _postcard_id: string;
  };
  url: "/api/postcards/{postcard_id}/like";
};

export type LikePostcardApiPostcardsPostcardIdLikePostErrors = {
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
  /**
   * 指定した絵葉書IDが見つからない場合
   */
  404: ErrorResponse;
  /**
   * すでにいいね済みの絵葉書に再度いいねしようとした場合
   */
  409: ErrorResponse;
  /**
   * Validation Error
   */
  422: HttpValidationError;
};

export type LikePostcardApiPostcardsPostcardIdLikePostError =
  LikePostcardApiPostcardsPostcardIdLikePostErrors[keyof LikePostcardApiPostcardsPostcardIdLikePostErrors];

export type LikePostcardApiPostcardsPostcardIdLikePostResponses = {
  /**
   * Successful Response
   */
  200: LikeResponse;
};

export type LikePostcardApiPostcardsPostcardIdLikePostResponse =
  LikePostcardApiPostcardsPostcardIdLikePostResponses[keyof LikePostcardApiPostcardsPostcardIdLikePostResponses];

export type GetMyCollectionApiUsersMeCollectionGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/users/me/collection";
};

export type GetMyCollectionApiUsersMeCollectionGetErrors = {
  /**
   * 認証トークンがない、または無効な場合
   */
  401: ErrorResponse;
};

export type GetMyCollectionApiUsersMeCollectionGetError =
  GetMyCollectionApiUsersMeCollectionGetErrors[keyof GetMyCollectionApiUsersMeCollectionGetErrors];

export type GetMyCollectionApiUsersMeCollectionGetResponses = {
  /**
   * Response Get My Collection Api Users Me Collection Get
   * Successful Response
   */
  200: Array<PostcardInCollection>;
};

export type GetMyCollectionApiUsersMeCollectionGetResponse =
  GetMyCollectionApiUsersMeCollectionGetResponses[keyof GetMyCollectionApiUsersMeCollectionGetResponses];

export type ReadRootGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/";
};

export type ReadRootGetResponses = {
  /**
   * Successful Response
   */
  200: unknown;
};

export type ClientOptions = {
  baseUrl:
    | "https://postcard-dev-alb-437445372.us-east-1.elb.amazonaws.com"
    | "http://localhost:8000"
    | (string & {});
};
